# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  MajorVersion: 1
  MinorVersion: 0
  Patch: 0

name: $(MajorVersion).$(MinorVersion).$(Patch)-$(Build.BuildId)

steps:

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*[Tt]est*/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    projects: '**/*.csproj'
    arguments: '--no-build'
    packDirectory: $(Build.ArtifactStagingDirectory)
    verbosityPack: 'minimal'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'master'))

- task: DotNetCoreCLI@2
  displayName: 'dotnet push'
  inputs:
    command: push
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: Nuget
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'master'))